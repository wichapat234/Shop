#pragma checksum "D:\Shop\Shop\Views\Transaction\List_Bill.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "f8c3fabbd4a8ea45fa1da9b9e6346c26c5061431"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Transaction_List_Bill), @"mvc.1.0.view", @"/Views/Transaction/List_Bill.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\Shop\Shop\Views\_ViewImports.cshtml"
using Shop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Shop\Shop\Views\_ViewImports.cshtml"
using Shop.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"f8c3fabbd4a8ea45fa1da9b9e6346c26c5061431", @"/Views/Transaction/List_Bill.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"cc6b55325b0ab971ba758bcc34a0cc77645e073f", @"/Views/_ViewImports.cshtml")]
    public class Views_Transaction_List_Bill : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "D:\Shop\Shop\Views\Transaction\List_Bill.cshtml"
  
    ViewData["Title"] = "รายการบิล";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<div class=""text-center"">
    <h1>รายการบิล</h1>
</div>

<div class=""text-center"">
    <label>วันที่ :</label>&nbsp;<input type=""date"" id=""date"">&nbsp;
    <label>หมายเลขบิล :</label>&nbsp;<input type=""text"" id=""bill"">&nbsp;
    <input type='button' value='ค้นหา' id='myButton' onClick='show_and_search_bill()' />&nbsp;
    <input type='button' value='เพิ่มบิล' id='myButton' onClick='Add_Bill()' />
    <br>
    <br>
    <table border=""1"" id=""Mytable"">
        <thead>
            <tr>
                <th> วันที่ </th>
                <th> หมายเลขบิล </th>
                <th> ราคาทั้งหมดก่อนลดราคา </th>
                <th> ลดราคาทั้งหมด </th>
                <th> ราคาทั้งหมดหลังลดราคา </th>
                <th> รายละเอียด </th>
            </tr>
        </thead>
        <tbody id=""body1"">

        </tbody>
    </table>
</div>
<script>
    $(document).ready(function () {
        show_and_search_bill();
    });

    function show_and_search_bill() {
        const bill = document");
            WriteLiteral(@".getElementById('bill').value;
        const date = document.getElementById('date').value;
    //    console.log(date)
        const obj = { NumberBill: bill, date: date }
        axios({
            method: 'post',
            url: '/Transaction/Get_Listbill',
            data: obj,
        })
            .then(function (response) {
                console.log(response);
                let table="""";
                response.data.forEach(function (element) {
                    const date = element.dateformate;
                    const subYear = date.substr(date.lastIndexOf(""/"") + 1);
                    const subDateMonth = date.substr(0, date.search(subYear))
                    const convertInt = parseInt(subYear)
                    const yearEn = convertInt - 543;
                    const DateEn = subDateMonth + yearEn;
                    table += '<tr>';
                    table += '<td>' + DateEn + '</td>';
                    table += '<td>' + element.numberBill + '</td>';
 ");
            WriteLiteral(@"                   table += '<td>' + element.priceBefore.toFixed(2) + '</td>';
                    table += '<td>' + element.totalDiscount.toFixed(2) + '</td>';
                    table += '<td>' + element.priceAfter.toFixed(2) + '</td>';
                    table += '<td><input type=""button"" name=""detail"" onClick=""Detail_Bill('+element.idBill+')"" value=""รายละเอียด""></td>';
                    table += '</tr>';
                });
                document.getElementById(""body1"").innerHTML = table;
            })
            .catch(function (error) {
                console.log(error);
            });

    }
</script>
<style>
    table {
        width: 100%;
        margin-left: auto;
        margin-right: auto;
        height: 50px;
    }

        table th {
            height: 50px;
        }
</style>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
