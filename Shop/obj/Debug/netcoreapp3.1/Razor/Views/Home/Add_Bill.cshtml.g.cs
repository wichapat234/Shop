#pragma checksum "D:\Shop\Shop\Views\Home\Add_Bill.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "21f79a5ecb0c15b241b9a3b97e5c7f66bb7c1488"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Add_Bill), @"mvc.1.0.view", @"/Views/Home/Add_Bill.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\Shop\Shop\Views\_ViewImports.cshtml"
using Shop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Shop\Shop\Views\_ViewImports.cshtml"
using Shop.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 1 "D:\Shop\Shop\Views\Home\Add_Bill.cshtml"
using Shop.ViewModels;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"21f79a5ecb0c15b241b9a3b97e5c7f66bb7c1488", @"/Views/Home/Add_Bill.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"cc6b55325b0ab971ba758bcc34a0cc77645e073f", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Add_Bill : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<DetailbillViewmodel>
    {
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 4 "D:\Shop\Shop\Views\Home\Add_Bill.cshtml"
  
    ViewData["Title"] = "เพิ่มบิล";

#line default
#line hidden
#nullable disable
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "21f79a5ecb0c15b241b9a3b97e5c7f66bb7c14883266", async() => {
                WriteLiteral("\r\n    <div class=\"text-center\">\r\n        <h1>");
#nullable restore
#line 9 "D:\Shop\Shop\Views\Home\Add_Bill.cshtml"
       Write(ViewData["Title"]);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"</h1>
    </div>
    <div class=""header col-3"">
        <b>หมายเลขบิล : </b>
        <b id=""bill_number""> Bill-0001</b>
        <br>
        <b> วันที่ : </b>
        <b id=""date""></b>
    </div>


    <div class=""text-center"">
        <button id=""add_bill"">เพิ่มรายการ</button>
        <br><br>
        <table border=""1"" class=""center"" id=""Mytable""");
                BeginWriteAttribute("value", " value=\"", 530, "\"", 538, 0);
                EndWriteAttribute();
                WriteLiteral(@">
            <thead>
                <tr>
                    <th> ชื่อสินค้า </th>
                    <th> หน่วย </th>
                    <th> ราคา/หน่วย </th>
                    <th> จำนวน </th>
                    <th> ราคารวม </th>
                    <th> ส่วนลด </th>
                    <th> ราคารวมหลังส่วนลด </th>
                </tr>
            </thead>
            <tbody id=""table_add_bill"">
            </tbody>
        </table>
        <br><br><br>
        <table class=""ft"">
            <tr>
                <th>ราคารวมก่อนส่วนลด :</th>
                <th id=""sum_after_discount"">0</th>
                <th>บาท</th>
            </tr>
            <tr>
                <th>ส่วนลดทั้งหมด :</th>
                <th id=""total_discount"">0</th>
                <th>บาท</th>
            </tr>
            <tr>
                <th>ราคารวมทั้งหมด :</th>
                <th id=""sum_before_discount"">0</th>
                <th>บาท</th>
            </tr>

        </table>
      ");
                WriteLiteral("  <button id=\"save_bill\">บันทึกรายการ</button>\r\n    </div>\r\n\r\n\r\n\r\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
<script>
    $(document).ready(function () {
        addrow();
        setdate();
        //   save_bill();
    });

    function save_bill(count) {
        //for (let i = 0; i<count;) {
        //    let sum_p = document.getElementById(""sum"" + i).innerHTML
        //    console.log(sum_p)
        //}
        // alert(count)
        //document.getElementById(""save_bill"").onclick = function () {
        //    alert(""1324"")
        //}
        // alert(""OK"")

        //  var obj = { IdNoun: id, Name: name }
        //axios({
        //    method: 'post',
        //    url: '/Home/List_Bill',
        //    data: obj
        //})
        //    .then(function (response) {
        //        console.log(response);

        //        window.location = '/Home/List_Unit';
        //    })
        //    .catch(function (error) {
        //        console.log(error);
        //    });
    }

    function setdate() {
        let n = new Date();
        let y = n.getFullYear() + 543;
");
            WriteLiteral(@"        let m = n.getMonth() + 1;
        let d = n.getDate();
        document.getElementById(""date"").innerHTML = d + ""/"" + m + ""/"" + y;

    }

    function Calculate_Sum(count) {
        var sum_cal = 0;
        for (var i = 1; i <= count; i++) { //Calculate Sum
            let sum_value = document.getElementById(""sum"" + i).innerHTML
            if (sum_value == """") {
                sum_value = 0;
            }
            // console.log(sum_value)
            var sum_int = parseFloat(sum_value);
            sum_cal += sum_int;
        }
        document.getElementById(""sum_after_discount"").innerHTML = sum_cal.toFixed(2)
    }

    function Calculate_Discount(count) {
        var dis_cal = 0;
        for (var i = 1; i <= count; i++) { //Calculate Discount
            let dis_value = document.getElementById(""discount"" + i).value
            if (dis_value == """") {
                dis_value = 0;
            }
            var dis_int = parseFloat(dis_value);
            dis_cal += ");
            WriteLiteral(@"dis_int;
        }
        document.getElementById(""total_discount"").innerHTML = dis_cal
    }

    function Calculate_Total() {
        let dis_total = document.getElementById(""total_discount"").innerHTML //Calculate Total
        let sum_af = document.getElementById(""sum_after_discount"").innerHTML
        let sum_bf = sum_af - dis_total
        document.getElementById(""sum_before_discount"").innerHTML = sum_bf.toFixed(2)
    }

    function addrow() {
        axios({
            method: 'Get',
            url: '/Home/GatdataProduct',
        })
            .then(function (response) {
                console.log(response.data.product)
                var count = 0;
                document.getElementById(""add_bill"").onclick = function () {
                    count += 1;
                    var Table = document.getElementById('Mytable');
                    var TableRow = Table.insertRow(-1);

                    //**Stat Create Select Option **//
                    var selectList = ");
            WriteLiteral(@"document.createElement(""select"");
                    selectList.id = ""selectvalue"" + count;
                    const cache = count;
                    selectList.onchange = function () { //ฟังก์ชัน OnChange สินค้า
                        //  let value_id = this.id;
                        var value1 = document.getElementById(""selectvalue"" + cache).value
                        for (let x = 0; x < response.data.product.length; x++) {
                            if (value1 == response.data.product[x].product_Id) {
                                document.getElementById(""unit"" + cache).innerHTML = response.data.product[x].nameUnit;
                                document.getElementById(""price"" + cache).innerHTML = response.data.product[x].productPrice;
                            }
                        }
                        document.getElementById(""count"" + cache).value = """";
                        document.getElementById(""discount"" + cache).value = """";
                        document.");
            WriteLiteral(@"getElementById(""sum"" + cache).innerHTML = 0;
                        document.getElementById(""total"" + cache).innerHTML = 0;

                        Calculate_Sum(count);
                        Calculate_Discount(count);
                        Calculate_Total();
                    }

                    var option1 = document.createElement(""option"");
                    option1.id = ""select"" + count;
                    option1.text = ""เลือกสินค้า"";
                    selectList.appendChild(option1);
                    for (var i = 0; i < response.data.product.length; i++) {
                        var option = document.createElement(""option"");
                        option.value = response.data.product[i].product_Id;
                        option.text = response.data.product[i].nameProduct;
                        selectList.appendChild(option);
                    }
                    //**End Create Select Option **//

                    var input_count = document.createElement");
            WriteLiteral(@"(""input""); //สร้าง element input จำนวนสินค้า
                    input_count.id = ""count"" + count;
                    input_count.type = ""number"";
                    input_count.value = """";
                    input_count.onkeyup = function () { //ฟังก์ชัน OnKeyUp จำนวน

                        let count_product = document.getElementById(""count"" + cache).value
                        let price_product = document.getElementById(""price"" + cache).innerHTML
                        let count_pro = parseInt(count_product)
                        let price = parseFloat(price_product)
                        let sum_product = 0;
                        sum_product = price * count_pro;
                        document.getElementById(""sum"" + cache).innerHTML = sum_product.toFixed(2)
                        Calculate_Sum(count);
                    }

                    var unit = document.createElement(""h""); //สร้าง element แสดง หน่วยสินค้า
                    unit.id = ""unit"" + count;
            ");
            WriteLiteral(@"        unit.value = """";

                    var price = document.createElement(""h""); //สร้าง element แสดงราคา/ชิ้น
                    price.id = ""price"" + count;
                    price.value = """";

                    var sum = document.createElement(""h""); //สร้าง element แสดง ราคารวม
                    sum.id = ""sum"" + count;
                    sum.value = """";

                    var discount = document.createElement(""input"");//สร้าง element input ส่วนลด
                    discount.id = ""discount"" + count;
                    discount.value = """";
                    discount.type = ""number"";
                    discount.onkeyup = function () { //ฟังก์ชัน OnKeyUp ส่วนลด
                        let sum_product = document.getElementById(""sum"" + cache).innerHTML
                        let discount_product = document.getElementById(""discount"" + cache).value
                        let total_product = 0;
                        total_product = sum_product - discount_product;
         ");
            WriteLiteral(@"               document.getElementById(""total"" + cache).innerHTML = total_product

                        Calculate_Discount(count);
                        Calculate_Total();

                    }

                    var total = document.createElement(""h""); //สร้าง element แสดง ราคาทั้งหมด
                    total.id = ""total"" + count;
                    total.value = """";


                    var currentCell = TableRow.insertCell(-1);
                    currentCell.appendChild(selectList);  //เลือกสินค้า

                    currentCell = TableRow.insertCell(-1);
                    currentCell.appendChild(unit); // แสดงหน่วยสินค้า

                    currentCell = TableRow.insertCell(-1);
                    currentCell.appendChild(price); //แสดงราคาสินค้า

                    currentCell = TableRow.insertCell(-1);
                    currentCell.appendChild(input_count); //กรอกจำนวนสินค้า

                    currentCell = TableRow.insertCell(-1);
                    curren");
            WriteLiteral(@"tCell.appendChild(sum); //คิดราคา ราคารวม = ราคา*จำนวน

                    currentCell = TableRow.insertCell(-1);
                    currentCell.appendChild(discount); //กรอกส่วนลด

                    currentCell = TableRow.insertCell(-1);
                    currentCell.appendChild(total); //รวมราคาทั้งหมด ราคารวม-ส่วนลด

                    document.getElementById(""save_bill"").onclick = function () {

                        const arry = [];
                        for (var i = 1; i <= count; i++) {
                            var sum_p = document.getElementById(""sum"" + i).innerHTML
                            var dis_p = document.getElementById(""discount"" + i).value
                            var total_p = document.getElementById(""total"" + i).innerHTML
                            var count_p = document.getElementById(""count"" + i).value
                            var value_p = document.getElementById(""selectvalue"" + i).value
                            var id_pro = parseInt(value_p)
 ");
            WriteLiteral(@"                           var count_pro = parseInt(count_p)
                            var dis_pro = parseFloat(dis_p)
                            var sum_pro = parseFloat(sum_p)
                            var total_pro = parseFloat(total_p)

                            var idpro = { IdProduct: id_pro, Count: count_pro, Discount: dis_pro, TotalPrice: sum_pro, LastPrice: total_pro }
                           
                            arry.push(idpro)
                        }
                        console.log(arry)
                      //  var obj = JSON.stringify(arry)
                        var obj = { IdProduct: 38 }
                        const headers = {
                            'Content-Type': 'application/json',
                            'Authorization': 'JWT fefege...'
                        }
                        axios({
                            method: 'post',
                            dataType: 'json',
                            url: '/Home/insert_detai");
            WriteLiteral(@"l_bill ',
                            headers: headers,
                            data: obj
                        })
                            .then(function (response) {
                                console.log(response);
                                alert(""OK"")
                              //  window.location.reload();
                            })
                            .catch(function (error) {
                                console.log(error);
                            });



                    }



                }

            });
    }
</script>
<style>


    .header {
        margin-left: 900px;
    }

    .ft {
        margin-left: 780px;
        width: 30%;
    }

    .center {
        width: 100%;
    }

    th {
        height: 50px
    }

    td {
        height: 50px
    }
</style>





");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<DetailbillViewmodel> Html { get; private set; }
    }
}
#pragma warning restore 1591
